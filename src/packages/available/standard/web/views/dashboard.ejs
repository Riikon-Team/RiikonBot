<%- include('layouts/default', {
  title: 'Standard Package',
  user: user,
  body: `
    <div class="d-flex justify-content-between align-items-center mb-4">
      <div>
        <h1 class="mb-0"><span class="text-gradient">Standard Package</span></h1>
        <p class="text-secondary">Core functionality for RiikonBot</p>
      </div>
      <span class="badge ${package.enabled ? 'bg-success' : 'bg-secondary'} fs-6">
        ${package.enabled ? 'Enabled' : 'Disabled'}
      </span>
    </div>
    
    <div class="row">
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header d-flex align-items-center">
            <i class="bi bi-command me-2"></i>
            <h5 class="mb-0">Basic Commands</h5>
          </div>
          <div class="card-body">
            <ul class="list-group list-group-flush border-0">
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                  <h6 class="mb-0 text-gradient">/ping</h6>
                  <small class="text-secondary">Check the bot's response time</small>
                </div>
                <span class="badge bg-primary rounded-pill">Slash</span>
              </li>
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                  <h6 class="mb-0 text-gradient">${package.config.prefix}ping</h6>
                  <small class="text-secondary">Check the bot's response time</small>
                </div>
                <span class="badge bg-secondary rounded-pill">Prefix</span>
              </li>
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                  <h6 class="mb-0 text-gradient">/help</h6>
                  <small class="text-secondary">Show list of available commands</small>
                </div>
                <span class="badge bg-primary rounded-pill">Slash</span>
              </li>
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                  <h6 class="mb-0 text-gradient">${package.config.prefix}help</h6>
                  <small class="text-secondary">Show list of available commands</small>
                </div>
                <span class="badge bg-secondary rounded-pill">Prefix</span>
              </li>
            </ul>
          </div>
        </div>
      </div>
      
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header d-flex align-items-center">
            <i class="bi bi-gear-fill me-2"></i>
            <h5 class="mb-0">Configuration</h5>
          </div>
          <div class="card-body">
            <form id="configForm">
              <div class="mb-3">
                <label for="prefix" class="form-label">Command Prefix</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="bi bi-hash"></i></span>
                  <input type="text" class="form-control" id="prefix" value="${package.config.prefix}" maxlength="5">
                </div>
                <div class="form-text text-secondary">The prefix used for text commands (e.g., ${package.config.prefix}help)</div>
              </div>
              
              <div class="mb-3">
                <label for="color" class="form-label">Theme Color</label>
                <input type="color" class="form-control form-control-color" id="color" value="${package.config.color}" title="Choose theme color">
                <div class="form-text text-secondary">Choose the theme color for bot embeds</div>
              </div>
              
              <div class="d-grid">
                <button type="submit" class="btn btn-primary">
                  <i class="bi bi-save me-2"></i>Save Changes
                </button>
              </div>
            </form>
          </div>
        </div>
        
        <div class="card">
          <div class="card-header d-flex align-items-center">
            <i class="bi bi-graph-up me-2"></i>
            <h5 class="mb-0">Statistics</h5>
          </div>
          <div class="card-body">
            <div class="row text-center">
              <div class="col-md-4 mb-3 mb-md-0">
                <div class="d-flex flex-column align-items-center">
                  <i class="bi bi-hdd-network fs-1 text-primary mb-2"></i>
                  <h3 class="text-gradient">${botClient.guilds.cache.size}</h3>
                  <p class="text-secondary">Servers</p>
                </div>
              </div>
              <div class="col-md-4 mb-3 mb-md-0">
                <div class="d-flex flex-column align-items-center">
                  <i class="bi bi-people fs-1 text-primary mb-2"></i>
                  <h3 class="text-gradient">${botClient.users.cache.size}</h3>
                  <p class="text-secondary">Users</p>
                </div>
              </div>
              <div class="col-md-4">
                <div class="d-flex flex-column align-items-center">
                  <i class="bi bi-clock-history fs-1 text-primary mb-2"></i>
                  <h3 class="text-gradient">${Math.floor(botClient.uptime / 3600000)}h ${Math.floor((botClient.uptime % 3600000) / 60000)}m</h3>
                  <p class="text-secondary">Uptime</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="mt-4 d-flex justify-content-between">
      <a href="/dashboard" class="btn btn-outline-light">
        <i class="bi bi-arrow-left me-2"></i>Back to Dashboard
      </a>
      <a href="/packages/standard/commands" class="btn btn-primary">
        <i class="bi bi-list-check me-2"></i>View All Commands
      </a>
    </div>
  `,
  additionalScripts: `
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const configForm = document.getElementById('configForm');
        
        // Add this class to style text gradients
        document.querySelectorAll('.text-gradient').forEach(el => {
          el.style.background = 'linear-gradient(to right, #d946ef, #8b5cf6)';
          el.style.webkitBackgroundClip = 'text';
          el.style.webkitTextFillColor = 'transparent';
          el.style.fontWeight = 'bold';
        });
        
        configForm.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          const prefix = document.getElementById('prefix').value;
          const color = document.getElementById('color').value;
          
          // Show saving indicator
          const submitBtn = this.querySelector('button[type="submit"]');
          const originalText = submitBtn.innerHTML;
          submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Saving...';
          submitBtn.disabled = true;
          
          try {
            const response = await fetch('/api/packages/standard/config', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                config: {
                  prefix,
                  color,
                  enabled: true,
                  title: "RiikonBot"
                }
              })
            });
            
            if (response.ok) {
              // Create a custom alert instead of using the browser's alert
              const alertDiv = document.createElement('div');
              alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-4';
              alertDiv.style.zIndex = '9999';
              alertDiv.innerHTML = \`
                <i class="bi bi-check-circle-fill me-2"></i>
                Configuration saved successfully!
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              \`;
              document.body.appendChild(alertDiv);
              
              // Auto dismiss after 3 seconds
              setTimeout(() => {
                const bsAlert = new bootstrap.Alert(alertDiv);
                bsAlert.close();
              }, 3000);
              
              window.location.reload();
            } else {
              const error = await response.json();
              
              // Create custom error alert
              const alertDiv = document.createElement('div');
              alertDiv.className = 'alert alert-danger alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-4';
              alertDiv.style.zIndex = '9999';
              alertDiv.innerHTML = \`
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                Error: \${error.error}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              \`;
              document.body.appendChild(alertDiv);
            }
          } catch (error) {
            console.error('Error saving configuration:', error);
            // Create custom error alert
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-danger alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-4';
            alertDiv.style.zIndex = '9999';
            alertDiv.innerHTML = \`
              <i class="bi bi-exclamation-triangle-fill me-2"></i>
              Failed to save configuration. See console for details.
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            \`;
            document.body.appendChild(alertDiv);
          } finally {
            // Restore button
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
          }
        });
      });
    </script>
  `
}) %>