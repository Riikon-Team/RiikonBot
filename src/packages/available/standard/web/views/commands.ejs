<%- include('layouts/default', {
  title: 'Commands',
  user: user,
  body: `
    <h1 class="mb-4">RiikonBot Commands</h1>
    
    <div class="row mb-4">
      <div class="col-md-6">
        <div class="input-group">
          <input type="text" id="searchInput" class="form-control" placeholder="Search commands...">
          <button class="btn btn-outline-secondary" type="button" id="clearSearch">Clear</button>
        </div>
      </div>
      <div class="col-md-6">
        <div class="d-flex justify-content-end">
          <div class="btn-group">
            <button type="button" class="btn btn-outline-primary" data-filter="all">All</button>
            <button type="button" class="btn btn-outline-primary" data-filter="Utility">Utility</button>
            <button type="button" class="btn btn-outline-primary" data-filter="Moderation">Moderation</button>
            <button type="button" class="btn btn-outline-primary" data-filter="Fun">Fun</button>
          </div>
        </div>
      </div>
    </div>
    
    <div class="table-responsive">
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th>Command</th>
            <th>Description</th>
            <th>Category</th>
          </tr>
        </thead>
        <tbody id="commandsTable">
          ${commands && commands.length > 0 
            ? commands.map(cmd => `
                <tr data-category="${cmd.category || 'Uncategorized'}">
                  <td><code>/${cmd.name}</code></td>
                  <td>${cmd.description}</td>
                  <td><span class="badge bg-primary">${cmd.category || 'Uncategorized'}</span></td>
                </tr>
              `).join('')
            : `<tr><td colspan="3" class="text-center">No commands found</td></tr>`
          }
        </tbody>
      </table>
    </div>
    
    <div class="mt-4">
      <a href="/packages/standard" class="btn btn-secondary">Back to Standard Package</a>
    </div>
  `,
  additionalScripts: `
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const clearButton = document.getElementById('clearSearch');
        const commandsTable = document.getElementById('commandsTable');
        const filterButtons = document.querySelectorAll('[data-filter]');
        
        // Search functionality
        searchInput.addEventListener('keyup', filterCommands);
        clearButton.addEventListener('click', function() {
          searchInput.value = '';
          filterCommands();
        });
        
        // Category filtering
        filterButtons.forEach(button => {
          button.addEventListener('click', function() {
            filterButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            filterCommands();
          });
        });
        
        function filterCommands() {
          const searchTerm = searchInput.value.toLowerCase();
          const categoryFilter = document.querySelector('[data-filter].active')?.dataset.filter || 'all';
          
          const rows = commandsTable.querySelectorAll('tr[data-category]');
          
          rows.forEach(row => {
            const name = row.querySelector('td:first-child').textContent.toLowerCase();
            const description = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
            const category = row.dataset.category;
            
            const matchesSearch = name.includes(searchTerm) || description.includes(searchTerm);
            const matchesCategory = categoryFilter === 'all' || category === categoryFilter;
            
            row.style.display = matchesSearch && matchesCategory ? '' : 'none';
          });
        }
        
        // Initialize with "All" selected
        document.querySelector('[data-filter="all"]').classList.add('active');
      });
    </script>
  `
}) %>